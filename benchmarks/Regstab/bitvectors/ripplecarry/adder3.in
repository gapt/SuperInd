% Commutativity of the ripple-carry adder
%	============================== PROOF =================================
%	
%	% Proof 1 at 0.02 (+ 0.00) seconds.
%	% Given clauses 248.
%	
%	% number of calls to fixpoint : 6 
%	 S_init  : 
%	 (73:  [ S1(v0) if  n = s(s(v0)) ].
%	74:  [ S2(v0) if  n = s(s(v0)) ].
%	164:  [ S3(v0) | -$CP$(v0) | -$C$(v0) if  n = s(s(v0)) ].
%	166:  [ S3(v0) | $CP$(v0) | $C$(v0) if  n = s(s(v0)) ].
%	) 
%	 S_loop  : 
%	 (302:  [ S3(v0) | $CP$(v0) | $C$(v0) if  n = s(s(s(v0))) ].
%	300:  [ S3(v0) | -$CP$(v0) | -$C$(v0) if  n = s(s(s(v0))) ].
%	169:  [ S2(v0) if  n = s(s(s(v0))) ].
%	168:  [ S1(v0) if  n = s(s(s(v0))) ].
%	) 
%	 The empty clauses  : 
%	 (75:  [  n = s(0) ].
%	176:  [  n = s(s(0)) ].
%	312:  [  n = s(s(s(0))) ].
%	) max_rank 3 
%	
%	============================== end of proof ==========================
%	
%	============================== STATISTICS ============================
%	
%	Given=248. Generated=963. Kept=306. proofs=1.
%	Usable=150. Sos=9. Demods=0. Limbo=0, Disabled=210. Hints=0.
%	Kept_by_rule=0, Deleted_by_rule=0.
%	Forward_subsumed=629. Back_subsumed=147.
%	Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
%	New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
%	Demod_attempts=0. Demod_rewrites=0.
%	Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
%	Nonunit_fsub_feature_tests=543. Nonunit_bsub_feature_tests=474.
%	Megabytes=0.56.
%	User_CPU=0.02, System_CPU=0.00, Wall_clock=0.
%	
%	============================== end of statistics =====================
%	
%	============================== end of search =========================

set(prolog_style_variables). 
assign(max_given, 2300).
set(raw).
%set(index_flat).
%set(print_gen).
set(superind).
%set(cycle2).
set(rank_given).
clear(sat).
set(random_loopdet).
set(binary_resolution).
set(ordered_res).
set(back_subsume).
assign(order, kbo).
clear(predicate_elim).
list(kbo_weights).
s = 3.
end_of_list.

formulas(sos).
( ( N(s(X)) | S1(X) ) & -C(s(0))  ) & ( ( N(s(X)) | S2(X) ) & -CP(s(0))  ) & ( ( N(s(X)) | S3(X) )  )  .  
S1(0) <-> $T  .
S1(s(X)) <-> ( S1(X) & ( ( S(s(X)) <-> -( - (A1(s(X)) <-> A2(s(X)) ) <-> C(s(X)))  ) & ( $C$(s(X)) <-> (A1(s(X)) & A2(s(X)) | C(s(X)) & A1(s(X)) | C(s(X)) & A2(s(X)))  ) ) )  .
S2(0) <-> $T  .
S2(s(X)) <-> ( S2(X) & ( ( SP(s(X)) <-> -( - (A2(s(X)) <-> A1(s(X)) ) <-> CP(s(X)))  ) & ( $CP$(s(X)) <-> (A2(s(X)) & A1(s(X)) | CP(s(X)) & A2(s(X)) | CP(s(X)) & A1(s(X)))  ) ) )  .
S3(0) <-> $F  .
S3(s(X)) <-> ( S3(X) | - (S(s(X)) <-> SP(s(X))) )  .
C(s(X))  <->  $C$(X)  .
CP(s(X))  <->  $CP$(X)  .

end_of_list.